	#region	var {$varName}; 更新表,并返回受影响行数
			var __{$functionName}_{$varName}_command__ = new System.Data.SQLite.SQLiteCommand("{$sql};", __{$functionName}_{$varName}_con__);
			<vt:if var="sqlVarParameters.Count" compare=">" value="0">
			var __{$functionName}_{$varName}_parameters__=new System.Data.SQLite.SQLiteParameter[{$sqlVarParameters.Count}];
			</vt:if>
			<vt:foreach from="$sqlVarParameters" item="sqlVarParameter" index="i">
			<vt:if var="sqlVarParameter.field.length" compare=">" value="0">
			__{$functionName}_{$varName}_parameters__[{$i}-1] = new System.Data.SQLite.SQLiteParameter("@{$sqlVarParameter.name}",System.Data.DbType.{$sqlVarParameter.field.dbType},{$sqlVarParameter.field.length});
			__{$functionName}_{$varName}_parameters__[{$i}-1].Value = {$sqlVarParameter.name};
			<vt:else>
			__{$functionName}_{$varName}_parameters__[{$i}-1] = new System.Data.SQLite.SQLiteParameter("@{$sqlVarParameter.name}",System.Data.DbType.{$sqlVarParameter.field.dbType});
			__{$functionName}_{$varName}_parameters__[{$i}-1].Value = {$sqlVarParameter.name};
			</vt:if>
			</vt:foreach>
			<vt:if var="sqlVarParameters.Count" compare=">" value="0">
			__{$functionName}_{$varName}_command__.Parameters.AddRange(__{$functionName}_{$varName}_parameters__);
			</vt:if>
			var {$varName} = __{$functionName}_{$varName}_command__.ExecuteNonQuery();
	#endregion
			